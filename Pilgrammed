local repo = 'https://raw.githubusercontent.com/wally-rblx/LinoriaLib/main/'

local Library = loadstring(game:HttpGet(repo .. 'Library.lua'))()
local ThemeManager = loadstring(game:HttpGet(repo .. 'addons/ThemeManager.lua'))()
local SaveManager = loadstring(game:HttpGet(repo .. 'addons/SaveManager.lua'))()

local Window = Library:CreateWindow({
    Title = 'Pilgrammed',
    Center = true, 
    AutoShow = true,
})

local Tabs = {
    Main = Window:AddTab('Main'),
	Shop = Window:AddTab('Shop'),
	Potion = Window:AddTab('Potion'),
	Gem = Window:AddTab('Gem'),
	Teleport = Window:AddTab('Teleport'),
    ['UI Settings'] = Window:AddTab('Settings'),
}

--[[ Tabs ]]--
local LeftGroupBox = Tabs.Main:AddLeftGroupbox('Bank üíµ')
local TabShop = Tabs.Shop:AddLeftTabbox()
local TabShop2 = Tabs.Shop:AddRightTabbox()
local TabTP = Tabs.Teleport:AddLeftTabbox()
local TabPo = Tabs.Potion:AddLeftTabbox()
local TabGem = Tabs.Gem:AddLeftTabbox()
local Box1 = Tabs.Main:AddLeftGroupbox('Miscellaneous üì∞')
local TabBox = Tabs.Main:AddRightTabbox()
local Tab1 = TabBox:AddTab('Keybind')
local TabS = TabShop:AddTab('Shop')
local TabS2 = TabShop:AddTab('Quest')
local TabS3 = TabShop2:AddTab('Ingredients')
local TabS4 = TabShop2:AddTab('Mela')
local Potion1 = TabPo:AddTab('Potion Recipes')
local Remo = TabGem:AddTab('Gem')
local TabIsland = TabTP:AddTab('Island')

--[[ Remotes ]]--
local Gesm = game:GetService("ReplicatedStorage").Remotes.Gem
local npcsr = game:GetService("Workspace").NPCs
local TPTO = game.Players.LocalPlayer
--[[ Tab 1 ]]--

Tab1:AddLabel('Open Cabinet'):AddKeyPicker('Cabinet', {
    Default = 'J',
    SyncToggleState = false,
    Mode = 'Toggle',
	NoUI = true,
})
Options.Cabinet:OnClick(function()
local state = Options.Cabinet:GetState()
if state then
local cabinetprompt = game:GetService("Workspace").Map.PrairieVillage.Cabinet:GetChildren()[2].ProximityPrompt
fireproximityprompt(cabinetprompt)
else
game:GetService("Players").LocalPlayer.PlayerGui.ScreenGui.Equipment.Visible = false
end end)

task.spawn(function()
while wait() do
        if Library.Unloaded then break end
    end
end)
Options.Cabinet:SetValue({ 'J', 'Toggle' })

Tab1:AddLabel('Open Cauldron'):AddKeyPicker('Cauldron', {
    Default = 'C',
    SyncToggleState = false,
    Mode = 'Toggle',
	NoUI = true,
})
Options.Cauldron:OnClick(function()
local state = Options.Cauldron:GetState()
if state then
local cauldronprompt = game:GetService("Workspace").Map.Cauldron.Liquid.ProximityPrompt
fireproximityprompt(cauldronprompt)
else
game:GetService("Players").LocalPlayer.PlayerGui.ScreenGui.Cauldron.Visible = false
end end)

task.spawn(function()
    while wait() do
        if Library.Unloaded then break end
    end
end)
Options.Cauldron:SetValue({ 'C', 'Toggle' })

Tab1:AddLabel('Wrap'):AddKeyPicker('Wraps', {
    Default = 'Y',
    SyncToggleState = false,
    Mode = 'Toggle',
	NoUI = true,
})
Options.Wraps:OnClick(function()
local state = Options.Wraps:GetState()
if state then
game:GetService("Players").LocalPlayer.PlayerGui.ScreenGui.Warp.Visible = true
game:GetService("Players").LocalPlayer.PlayerGui.ScreenGui.Warp.LocalScript.Disabled = true
game:GetService("Players").LocalPlayer.PlayerGui.ScreenGui.Warp.LocalScript.Enabled = true
else
game:GetService("Players").LocalPlayer.PlayerGui.ScreenGui.Warp.Visible = false
end end)

task.spawn(function()
    while true do
        wait(3)
        local state = Options.Wraps:GetState()
        if state then
        end
        if Library.Unloaded then break end
    end
end)
Options.Wraps:SetValue({ 'Y', 'Toggle' })

--[[ Bank ]]--
LeftGroupBox:AddToggle('Bank', {
    Text = 'Auto Deposit',
    Default = false,
    Tooltip = 'self explanatory',
})
Toggles.Bank:OnChanged(function()
    _G.Deposit = false
	_G.Deposit = Toggles.Bank.Value
while _G.Deposit do
game:GetService("ReplicatedStorage").Remotes.Bank:InvokeServer(true, 9000000000)
wait()
end
end)

local withdraw = LeftGroupBox:AddButton('Withdraw Half', function()
game:GetService("ReplicatedStorage").Remotes.Bank:InvokeServer(false, 0.5)
end)
withdraw:AddTooltip('Withdraw Half')

LeftGroupBox:AddLabel('Open Bank'):AddKeyPicker('Bank', {
    Default = 'K',
    SyncToggleState = false, 
    Mode = 'Toggle',
	NoUI = true,
})
Options.Bank:OnClick(function()
local state = Options.Bank:GetState()
if state then
game:GetService("Players").LocalPlayer.PlayerGui.ScreenGui.Bank.Visible = true
else
game:GetService("Players").LocalPlayer.PlayerGui.ScreenGui.Bank.Visible = false
end end)

task.spawn(function()
    while true do
        wait()
        local state = Options.Bank:GetState()
        if state then
        end
        if Library.Unloaded then break end
    end
end)

Options.Bank:SetValue({ 'K', 'Toggle' })

--[[ Gem ]]--
Remo:AddLabel('You need to hold a tool first')
Remo:AddLabel('üõ†')
Remo:AddLabel('Remove Gem ‚õîüíé')
Remo:AddDivider()
local RemoveGem = Remo:AddButton('Remove Gem', function()
Gesm:FireServer()
end)
Remo:AddDivider()
Remo:AddLabel('Attach Gem ‚úÖüíé')
Remo:AddDivider()

local CharmGem = Remo:AddButton('Charm Gem', function()
Gesm:FireServer("Charm Gem")
end)

local BloodGem = Remo:AddButton('Blood Gem', function()
Gesm:FireServer("Blood Gem")
end)

local LightGem = Remo:AddButton('Light Gem', function()
Gesm:FireServer("Light Gem")
end)

local FrostGem = Remo:AddButton('Frost Gem', function()
Gesm:FireServer("Frost Gem")
end)

local FireGem = Remo:AddButton('Fire Gem', function()
Gesm:FireServer("Fire Gem")
end)

local MagicGem = Remo:AddButton('Magic Gem', function()
Gesm:FireServer("Magic Gem")
end)

local InsigniaGem = Remo:AddButton('Insignia Gem', function()
Gesm:FireServer("Insignia Gem")
end)

local ExplosiveGem = Remo:AddButton('Explosive Gem', function()
Gesm:FireServer("Explosive Gem")
end)

--[[ Box1 ]]--

local Button1 = Box1:AddButton('Trigger Cultist', function()
fireclickdetector(game:GetService("Workspace").Map.Hideout.Door.Door.ClickDetector)
end)
Button1:AddTooltip('Open N Door')

local Button0 = Box1:AddButton('Remove Mount Barrier', function()
for i,v in pairs(workspace:GetDescendants()) do
if v.Name == "MountBarrier" then
v:Destroy()
end end end)
Button0:AddTooltip('Remove a barrier that block your mount/boat')

local Button0 = Box1:AddButton('Remove Boss Barrier', function()
for i,v in pairs(game.workspace.Map:GetChildren()) do
if v.Name == "Barrier" or v.Name == "NBarrier" then
v:Destroy()
end
end
end)
Button0:AddTooltip('Remove N/Sailord Barrier')

local Button2 = Box1:AddButton('Spawn Boat', function()
game:GetService("ReplicatedStorage").Remotes.Boat:FireServer()
end)
Button2:AddTooltip('Spawn Boat Anywhere!')

Box1:AddDropdown('Race', {
    Values = { 'Imp', 'Ice', 'Vampire', 'Human' },
    Default = 0,
    Multi = false,
    Text = 'Change Race ü•µ/ü•∂/üíÄ/üë¶üèª',
})
Options.Race:OnChanged(function(SelectedRace)
local Races = game:GetService("ReplicatedStorage").Remotes.Skill
   if SelectedRace == "Imp" then
Races:FireServer("Imp")
   elseif SelectedRace == "Human" then
Races:FireServer("Reaper")
   elseif SelectedRace == "Ice" then
Races:FireServer("Ice")
   elseif SelectedRace == "Vampire" then
Races:FireServer("Vampire")
end end)

--[[ Potion ]]--

Potion1:AddDropdown('Potion', {
    Values = {"Health", "Health 2", "Damage", "Gold", "Speed 6", "Speed 7.75", "Speed 8.5", "Speed 10"},
    Default = 0,
    Multi = false,
    Text = 'Potion ü•õ',
})
Options.Potion:OnChanged(function(op)
c = op
end)
local PotButton = Potion1:AddButton('Create Potion üî®', function()
    if c == "Health" then
    local args = {
        [1] = {
            [1] = "Sinister Fruit",
            [2] = "Sinister Fruit",
            [3] = "Sinister Fruit",
            [4] = "Sinister Fruit",
            [5] = "Sinister Fruit"
        }
    }
    
    game:GetService("ReplicatedStorage").Remotes.Cauldron:FireServer(unpack(args)) end
    if c == "Health 2" then
        local args = {
            [1] = {
                [1] = "Salmon",
                [2] = "Salmon",
                [3] = "Salmon",
                [4] = "Salmon",
                [5] = "Salmon"
            }
        }
        
        game:GetService("ReplicatedStorage").Remotes.Cauldron:FireServer(unpack(args)) end
    if c == "Damage" then
    local args = {
        [1] = {
            [1] = "Rage Berry",
            [2] = "Rage Berry",
            [3] = "Rage Berry",
            [4] = "Shrimp",
            [5] = "Magma Slime"
        }
    }
    
    game:GetService("ReplicatedStorage").Remotes.Cauldron:FireServer(unpack(args))
     end
    if c == "Gold" then 
    local args = {
        [1] = {
            [1] = "Gold Dust",
            [2] = "Gold Dust",
            [3] = "Gold Dust",
            [4] = "Blue Slime",
            [5] = "Magma Slime"
        }
    }
    
    game:GetService("ReplicatedStorage").Remotes.Cauldron:FireServer(unpack(args))
     end
     if c == "Speed 6" then
    local args = {
        [1] = {
            [1] = "Coconut",
            [2] = "Coconut",
            [3] = "Coconut",
            [4] = "Coconut",
            [5] = "Sugar"
        }
    }
    
    game:GetService("ReplicatedStorage").Remotes.Cauldron:FireServer(unpack(args))
end
if c == "Speed 10" then
    local args = {
        [1] = {
            [1] = "Sugar",
            [2] = "Sugar",
            [3] = "Sugar",
            [4] = "Sugar",
            [5] = "Sugar"
        }
    }
    
    game:GetService("ReplicatedStorage").Remotes.Cauldron:FireServer(unpack(args))
end
if c == "Speed 8.5" then
    local args = {
        [1] = {
            [1] = "Shrimp",
            [2] = "Sugar",
            [3] = "Sugar",
            [4] = "Sugar",
            [5] = "Sugar"
        }
    }
    
    game:GetService("ReplicatedStorage").Remotes.Cauldron:FireServer(unpack(args))
end
if c == "Speed 7.75" then
    local args = {
        [1] = {
            [1] = "Shrimp",
            [2] = "Coconut",
            [3] = "Sugar",
            [4] = "Sugar",
            [5] = "Sugar"
        }
    }
    
    game:GetService("ReplicatedStorage").Remotes.Cauldron:FireServer(unpack(args))
end
end)

local checkrecipe = PotButton:AddButton('Check Recipe üìÉ', function()
    if c == "Health" then game:GetService("StarterGui"):SetCore("SendNotification",{Title = "Recipe",Text = "5 Sinister Fruit",}) end
    if c == "Health 2" then game:GetService("StarterGui"):SetCore("SendNotification",{Title = "Recipe",Text = "5 Salmon",}) end
    if c == "Damage" then game:GetService("StarterGui"):SetCore("SendNotification",{Title = "Recipe",Text = "3 Rage Berry, 1 Shrimp, 1 Magma Slime",}) end
    if c == "Gold" then game:GetService("StarterGui"):SetCore("SendNotification",{Title = "Recipe",Text = "3 Gold Dust, 1 Blue Slime, Magma Slime",}) end
    if c == "Speed 6" then game:GetService("StarterGui"):SetCore("SendNotification",{Title = "Recipe",Text = "4 Coconut, 1 Sugar",}) end
    if c == "Speed 10" then game:GetService("StarterGui"):SetCore("SendNotification",{Title = "Recipe",Text = "4 Coconut, 5 Sugar",}) end
    if c == "Speed 8.5" then game:GetService("StarterGui"):SetCore("SendNotification",{Title = "Recipe",Text = "1 Shrimp, 4 Sugar",}) end
    if c == "Speed 7.75" then game:GetService("StarterGui"):SetCore("SendNotification",{Title = "Recipe",Text = "1 Coconut, 1 Shrimp, 3 Sugar",}) end
end)
--[[ Teleport ]]--

TabIsland:AddDropdown('Island', {
    Values = {"Big Iron", "Blackened Island", "Bear Island", "Dark Tower Island", "Patchland Grove", "LOFI Island", "Vampire Island", "Mountain Basin", "Field", "Labyrinth", "Polar Bear Island", "Backdoor Island", "Patris Island", "Enchanted Island", "Eggroost Island"},
    Default = 0,
    Multi = false,
    Text = 'Islands üèù',
})
Options.Island:OnChanged(function(SelectedLocation)
    if SelectedLocation == "Big Iron" then
        TPTO.Character.HumanoidRootPart.CFrame = CFrame.new(2379, -22, -3320)
   elseif SelectedLocation == "Blackened Island" then
    TPTO.Character.HumanoidRootPart.CFrame = CFrame.new(-52, -11, -4458)
   elseif SelectedLocation == "Bear Island" then
    TPTO.Character.HumanoidRootPart.CFrame = CFrame.new(-1463, 69, -130)
   elseif SelectedLocation == "Dark Tower Island" then
    TPTO.Character.HumanoidRootPart.CFrame = CFrame.new(889, -5, -5835)
   elseif SelectedLocation == "Patchland Grove" then
    TPTO.Character.HumanoidRootPart.CFrame = CFrame.new(-2312, 1, 1044)
   elseif SelectedLocation == "LOFI Island" then
    TPTO.Character.HumanoidRootPart.CFrame = CFrame.new(3398, -293, -1502)
   elseif SelectedLocation == "Vampire Island" then
    TPTO.Character.HumanoidRootPart.CFrame = CFrame.new(2795, -22, -2106)
   elseif SelectedLocation == "Mountain Basin" then
    TPTO.Character.HumanoidRootPart.CFrame = CFrame.new(1404, -22, 988)
   elseif SelectedLocation == "Field" then
    TPTO.Character.HumanoidRootPart.CFrame = CFrame.new(7487, -460, 1006)
   elseif SelectedLocation == "Labyrinth" then
    TPTO.Character.HumanoidRootPart.CFrame = CFrame.new(-147, -17, 2671)
   elseif SelectedLocation == "Polar Bear Island" then
    TPTO.Character.HumanoidRootPart.CFrame = CFrame.new(550, -21, 1617)
   elseif SelectedLocation == "Backdoor Island" then
    TPTO.Character.HumanoidRootPart.CFrame = CFrame.new(-1973, -21, -5007)
   elseif SelectedLocation == "Patris Island" then
    TPTO.Character.HumanoidRootPart.CFrame = CFrame.new(-3251, -22, -4615)
   elseif SelectedLocation == "Enchanted Island" then
    TPTO.Character.HumanoidRootPart.CFrame = CFrame.new(-824, -2, 1735)
   elseif SelectedLocation == "Eggroost Island" then
    TPTO.Character.HumanoidRootPart.CFrame = CFrame.new(-2070, 57, -3242)
end end)

TabIsland:AddDivider()

TabIsland:AddDropdown('Places', {
    Values = {"Vermeil Village", "King Den", "Forest", "Desert", "Deep Desert", "Volcano", "Big Bay", "Savannah", "Swamp", "Cold Mountain", "Forgotten Village", "Cloud City", "Observatory", "Old Fart Gate"},
    Default = 0,
    Multi = false,
    Text = 'Places üèö',
})
Options.Places:OnChanged(function(SelectedLocation)
    if SelectedLocation == "Vermeil Village" then
       TPTO.Character.HumanoidRootPart.CFrame = CFrame.new(880, 8, -389)
   elseif SelectedLocation == "King Den" then
       TPTO.Character.HumanoidRootPart.CFrame = CFrame.new(873, 4, -235)
   elseif SelectedLocation == "Forest" then
       TPTO.Character.HumanoidRootPart.CFrame = CFrame.new(-189, 132, -777)
   elseif SelectedLocation == "Desert" then
       TPTO.Character.HumanoidRootPart.CFrame = CFrame.new(903, -0, -1843)
   elseif SelectedLocation == "Deep Desert" then
       TPTO.Character.HumanoidRootPart.CFrame = CFrame.new(105, -23, -2605)
   elseif SelectedLocation == "Volcano" then
       TPTO.Character.HumanoidRootPart.CFrame = CFrame.new(1121, 152, -3833)
   elseif SelectedLocation == "Big Bay" then
       TPTO.Character.HumanoidRootPart.CFrame = CFrame.new(2037, -21, -888)
   elseif SelectedLocation == "Savannah" then
       TPTO.Character.HumanoidRootPart.CFrame = CFrame.new(1760, 23, -1347)
   elseif SelectedLocation == "Swamp" then
       TPTO.Character.HumanoidRootPart.CFrame = CFrame.new(530, 32, -1692)
   elseif SelectedLocation == "Cold Mountain" then
       TPTO.Character.HumanoidRootPart.CFrame = CFrame.new(1228, 262, 100)
   elseif SelectedLocation == "Forgotten Village" then
       TPTO.Character.HumanoidRootPart.CFrame = CFrame.new(5608, -197, 2082)
   elseif SelectedLocation == "Cloud City" then
       TPTO.Character.HumanoidRootPart.CFrame = CFrame.new(701, 552, 2351)
   elseif SelectedLocation == "Sky Arena" then
       TPTO.Character.HumanoidRootPart.CFrame = CFrame.new(4148, 401, -2516)
   elseif SelectedLocation == "Observatory" then
       TPTO.Character.HumanoidRootPart.CFrame = CFrame.new(-2529, 56, -2851)
   elseif SelectedLocation == "Old Fart Gate" then
       TPTO.Character.HumanoidRootPart.CFrame = CFrame.new(4780, -386, 1102)
end end)

TabIsland:AddDivider()

TabIsland:AddDropdown('Boss', {
    Values = {"Thief King", "Yalgaroth", "Viperhead", "King Sandpod", "Pop Off Pirate", "Shock Merauder", "Mondo Squid", "Magma Turtle", "Ice King", "Abdominal Snowman", "Highway Son", "Archmage"},
    Default = 0,
    Multi = false,
    Text = 'Boss ü¶ç',
})
Options.Boss:OnChanged(function(SelectedLocation)
   if SelectedLocation == "Thief King" then
       TPTO.Character.HumanoidRootPart.CFrame = CFrame.new(739, -15, 204)
   elseif SelectedLocation == "Yalgaroth" then
       TPTO.Character.HumanoidRootPart.CFrame = CFrame.new(441, -52, -176)
   elseif SelectedLocation == "Viperhead" then
       TPTO.Character.HumanoidRootPart.CFrame = CFrame.new(529, 79, -2286)
   elseif SelectedLocation == "King Sandpod" then
       TPTO.Character.HumanoidRootPart.CFrame = CFrame.new(137, -17, -2113)
   elseif SelectedLocation == "Pop Off Pirate" then
       TPTO.Character.HumanoidRootPart.CFrame = CFrame.new(1871, -18, -218)
   elseif SelectedLocation == "Shock Merauder" then
       TPTO.Character.HumanoidRootPart.CFrame = CFrame.new(1410, -2, -1448)
   elseif SelectedLocation == "Mondo Squid" then
       TPTO.Character.HumanoidRootPart.CFrame = CFrame.new(1976, 96, 1006)
   elseif SelectedLocation == "Magma Turtle" then
       TPTO.Character.HumanoidRootPart.CFrame = CFrame.new(577, 51, -3557)
   elseif SelectedLocation == "Ice King" then
       TPTO.Character.HumanoidRootPart.CFrame = CFrame.new(1355, 464, 191)
   elseif SelectedLocation == "Abdominal Snowman" then
       TPTO.Character.HumanoidRootPart.CFrame = CFrame.new(1639, 402, 496)
   elseif SelectedLocation == "Highway Son" then
       TPTO.Character.HumanoidRootPart.CFrame = CFrame.new(2231, 561, 3451)
   elseif SelectedLocation == "Archmage" then
       TPTO.Character.HumanoidRootPart.CFrame = CFrame.new(-1031, 72, 1772)
end end)

TabIsland:AddDivider()

TabIsland:AddDropdown('SpecialBoss', {
    Values = {"Creepy Crab", "Granny", "Executioner", "Sailord", "Kai Guy", "Big Fish","The Skeleton", "The Patris", "Prism Troll", "Old Fart", "N"},
    Default = 0,
    Multi = false,
    Text = 'Special Boss ü¶Ñ',
})
Options.SpecialBoss:OnChanged(function(SelectedLocation)
   if SelectedLocation == "Creepy Crab" then
       TPTO.Character.HumanoidRootPart.CFrame = CFrame.new(-226, 39, -2810)
   elseif SelectedLocation == "Granny" then
	   TPTO.Character.HumanoidRootPart.CFrame = CFrame.new(1359, 31, -3455)
   elseif SelectedLocation == "Executioner" then
       TPTO.Character.HumanoidRootPart.CFrame = CFrame.new(1008, 548, 635)
   elseif SelectedLocation == "Sailord" then
       TPTO.Character.HumanoidRootPart.CFrame = CFrame.new(1905, -11, -1384)
   elseif SelectedLocation == "Kai Guy" then
       TPTO.Character.HumanoidRootPart.CFrame = CFrame.new(1716, 186, 219)
   elseif SelectedLocation == "Big Fish" then
       TPTO.Character.HumanoidRootPart.CFrame = CFrame.new(-761, 43, -3350)
   elseif SelectedLocation == "The Skeleton" then
       TPTO.Character.HumanoidRootPart.CFrame = CFrame.new(-190, -27, -4362)
   elseif SelectedLocation == "The Patris" then
       TPTO.Character.HumanoidRootPart.CFrame = CFrame.new(-3286, -19, -4534)
   elseif SelectedLocation == "Prism Troll" then
       TPTO.Character.HumanoidRootPart.CFrame = CFrame.new(746, -256, 17)
   elseif SelectedLocation == "Old Fart" then
       TPTO.Character.HumanoidRootPart.CFrame = CFrame.new(7487, -460, 1006)
   elseif SelectedLocation == "N" then
       TPTO.Character.HumanoidRootPart.CFrame = CFrame.new(94, 42, -3741)
end end)



--[[ Shop 2 ]]--

TabS3:AddLabel('Kitchen Items üçãüçí')
TabS3:AddDivider()

TabS3:AddDropdown('Kitchen', {
    Values = { 'Mela', 'Pomme', 'Potcup', 'Jared', },
    Default = 0,
    Multi = false,
    Text = 'NPCS',
})
Options.Kitchen:OnChanged(function(SelectedNPC)
local npcsr = game:GetService("Workspace").NPCs
   if SelectedNPC == "Mela" then
local Melaprompt = npcsr.Mela.HumanoidRootPart.DialogClick
fireproximityprompt(Melaprompt)
   elseif SelectedNPC == "Pomme" then
local Pommeprompt = npcsr.Pomme.HumanoidRootPart.DialogClick
fireproximityprompt(Pommeprompt)
   elseif SelectedNPC == "Potcup" then
local Potcupprompt = game:GetService("Workspace").Map.Underground.Potcup.HumanoidRootPart.DialogClick
fireproximityprompt(Potcupprompt)
   elseif SelectedNPC == "Jared" then
local Jaredprompt = npcsr.Jared.HumanoidRootPart.DialogClick
fireproximityprompt(Jaredprompt)
end end)

TabS4:AddLabel('Mela Daily Shop')
TabS4:AddDivider()
local buy = game:GetService("ReplicatedStorage").Remotes.Buy
local Button3 = TabS4:AddButton('Silent Powder', function()
    daily1:InvokeServer("Silent Powder")
end)
local Button14 = TabS4:AddButton('Weak Armor Wax', function()
    daily1:InvokeServer("Weak Armor Wax")
end)
local Button4 = TabS4:AddButton('Diamond Ring', function()
    daily1:InvokeServer("Diamond Ring")
end)
local Button5 = TabS4:AddButton('Unharmed Energy', function()
    daily1:InvokeServer("Unharmed Energy")
end)
local Button6 = TabS4:AddButton('Harmed Energy', function()
    daily1:InvokeServer("Harmed Energy")
end)
local Button7 = TabS4:AddButton('Gold Dust', function()
    daily1:InvokeServer("Gold Dust")
end)
local Button8 = TabS4:AddButton('The Bulwark', function()
    daily1:InvokeServer("The Bulwark")
end)
local Button9 = TabS4:AddButton('Applehead', function()
    daily1:InvokeServer("Applehead")
end)
local Button10 = TabS4:AddButton('Prime Scepter', function()
    daily1:InvokeServer("Prime Scepter")
end)
local Button11 = TabS4:AddButton('Black Belt', function()
    daily1:InvokeServer("Black Belt")
end)
local Button12 = TabS4:AddButton('Mana Bullets', function()
    daily1:InvokeServer("Mana Bullets")
end)
local Button13 = TabS4:AddButton('Climbing Claws', function()
    daily1:InvokeServer("Climbing Claws")
end)

--[[ Description ]]--

Button3:AddTooltip('750 Gold, Gunpowder, 10 Pink Slime, 8 Zinc')
Button4:AddTooltip('2500 Gold, 3 Diamond')
Button5:AddTooltip('800 Gold')
Button6:AddTooltip('800 Gold')
Button7:AddTooltip('25 Gold')
Button8:AddTooltip('2500 Gold, 12 Iron, 8 Brass, 1 Diamond')
Button9:AddTooltip('50K Gold')
Button10:AddTooltip('2500 Gold, 1 Prime Brand, Magic Branch')
Button11:AddTooltip('1500 Gold')
Button12:AddTooltip('1000 Gold, Piercing Bullets, 25 Arcane Essence')
Button13:AddTooltip('600 Gold, 8 Iron, 4 Zinc')
Button14:AddTooltip('500 Gold, 10 Chaos Essence, 5 Pebble Core')

--[[ Next Update ]]

--[[ Shop ]]--

TabS:AddLabel('Prairie/Desert üè°/üèú')
TabS:AddDivider()

TabS:AddDropdown('Prairie', {
    Values = { 'Blacksmith', 'Gerald', 'Archer', 'Gorlan', 'Lorgan' },
    Default = 0,
    Multi = false,
    Text = 'NPCS',
})
Options.Prairie:OnChanged(function(SelectedNPC)
local npcsr = game:GetService("Workspace").NPCs
   if SelectedNPC == "Blacksmith" then
local blacksmithprompt = npcsr.Blacksmith.HumanoidRootPart.DialogClick
fireproximityprompt(blacksmithprompt)
   elseif SelectedNPC == "Gerald" then
local geraldprompt = npcsr.Gerald.HumanoidRootPart.DialogClick
fireproximityprompt(geraldprompt)
   elseif SelectedNPC == "Archer" then
local Archerprompt = npcsr.Archer.HumanoidRootPart.DialogClick
fireproximityprompt(Archerprompt)
   elseif SelectedNPC == "Gorlan" then
local gorlanprompt = npcsr.Gorlan.HumanoidRootPart.DialogClick
fireproximityprompt(gorlanprompt)
   elseif SelectedNPC == "Lorgan" then
local lorganprompt = npcsr.Lorgan.HumanoidRootPart.DialogClick
fireproximityprompt(lorganprompt)
end end)

TabS:AddLabel('--------------')
TabS:AddLabel('Swamp/Savannah üßôüèø‚Äç‚ôÄÔ∏è/ü§†')
TabS:AddDivider()

TabS:AddDropdown('Swamp', {
    Values = { 'Friendly Witch', 'Verdant', 'Kennit' },
    Default = 0,
    Multi = false,
    Text = 'NPCS',
})
Options.Swamp:OnChanged(function(SelectedNPC)
local npcsr = game:GetService("Workspace").NPCs
   if SelectedNPC == "Friendly Witch" then
local verdantprompt = npcsr["Friendly Witch"].HumanoidRootPart.DialogClick
fireproximityprompt(verdantprompt)
   elseif SelectedNPC == "Verdant" then
local verdantprompt = npcsr.Verdant.HumanoidRootPart.DialogClick
fireproximityprompt(verdantprompt)
   elseif SelectedNPC == "Kennit" then
local kennitprompt = npcsr.Kennit.HumanoidRootPart.DialogClick
fireproximityprompt(kennitprompt)
end end)

TabS:AddLabel('--------------')
TabS:AddLabel('Volcano/Mountain üåã/üèî')
TabS:AddDivider()

TabS:AddDropdown('Volcano', {
    Values = { 'Oglorn', 'Galon', 'Fimbul', 'Lunge' },
    Default = 0,
    Multi = false,
    Text = 'NPCS',
})
Options.Volcano:OnChanged(function(SelectedNPC)
local npcsr = game:GetService("Workspace").NPCs
   if SelectedNPC == "Oglorn" then
local oglornprompt = npcsr.Oglorn.HumanoidRootPart.DialogClick
fireproximityprompt(oglornprompt)
   elseif SelectedNPC == "Galon" then
local galonprompt = npcsr.Galon.HumanoidRootPart.DialogClick
fireproximityprompt(galonprompt)
   elseif SelectedNPC == "Fimbul" then
local fimbulprompt = npcsr.Fimbul.HumanoidRootPart.DialogClick
fireproximityprompt(fimbulprompt)
   elseif SelectedNPC == "Lunge" then
local lungeprompt = npcsr.Lunge.HumanoidRootPart.DialogClick
fireproximityprompt(lungeprompt)
end end)

TabS:AddLabel('--------------')
TabS:AddLabel('CloudCity/Observatory ‚õÖ/üè≠')
TabS:AddDivider()

TabS:AddDropdown('CloudCity', {
    Values = { 'Clever', 'William', 'Mira', 'Billy', 'Talvern' },
    Default = 0,
    Multi = false,
    Text = 'NPCS',
})
Options.CloudCity:OnChanged(function(SelectedNPC)
   if SelectedNPC == "Clever" then
local Cleverprompt = npcsr.Clever.HumanoidRootPart.DialogClick
fireproximityprompt(Cleverprompt)
   elseif SelectedNPC == "William" then
local Williamprompt = npcsr.William.HumanoidRootPart.DialogClick
fireproximityprompt(Williamprompt)
   elseif SelectedNPC == "Mira" then
local Miraprompt = npcsr.Mira.HumanoidRootPart.DialogClick
fireproximityprompt(Miraprompt)
   elseif SelectedNPC == "Billy" then
local Billyprompt = npcsr.Billy.HumanoidRootPart.DialogClick
fireproximityprompt(Billyprompt)
   elseif SelectedNPC == "Talvern" then
local Talvernprompt = npcsr.Talvern.HumanoidRootPart.DialogClick
fireproximityprompt(Talvernprompt)
end end)

TabS3:AddDivider()
TabS3:AddLabel('Special Npcs ‚≠ê')
TabS3:AddLabel('------------')
TabS3:AddDropdown('Special', {
    Values = { 'Simon (Vampire)', 'Devai (Kai Items)', 'Sailord (Boat Upgrade)', 'Jared (Fishing Rod)', 'Mela (Wanderer)', 'Hobo (Fighting Style)', 'Odd Sculpture (Big Iron)' },
    Default = 0,
    Multi = false,
    Text = 'NPCS',
})
Options.Special:OnChanged(function(SelectedNPC)
   if SelectedNPC == "Simon (Vampire)" then
local Simonprompt = npcsr.Simon.HumanoidRootPart.DialogClick
fireproximityprompt(Simonprompt)
   elseif SelectedNPC == "Devai (Kai Items)" then
local Devaiprompt = npcsr.Devai.HumanoidRootPart.DialogClick
fireproximityprompt(Devaiprompt)
   elseif SelectedNPC == "Sailord (Boat Upgrade)" then
local Sailordprompt = npcsr.Sailord.HumanoidRootPart.DialogClick
fireproximityprompt(Sailordprompt)
   elseif SelectedNPC == "Jared (Fishing Rod)" then
local Jaredprompt = npcsr.Jared.HumanoidRootPart.DialogClick
fireproximityprompt(Jaredprompt)
   elseif SelectedNPC == "Mela (Wanderer)" then
local Melaprompt = npcsr.Mela.HumanoidRootPart.DialogClick
fireproximityprompt(Melaprompt)
   elseif SelectedNPC == "Hobo (Fighting Style)" then
local Hoboprompt = npcsr.Hobo.HumanoidRootPart.DialogClick
fireproximityprompt(Hoboprompt)
   elseif SelectedNPC == "Odd Sculpture (Big Iron)" then
local oddprompt = npcsr["Odd Sculpture"].Root.DialogClick
fireproximityprompt(oddprompt)
end end)

--[[ Quest ]]--

TabS2:AddLabel('Quest Giver')
TabS2:AddDivider()

TabS2:AddDropdown('Quest', {
    Values = { 'Abraska', 'Lumber Jack', 'Nebraska', 'Vigilante', 'Captorio', 'Humblert', 'Desert Hideout', 'Verdant', 'Trinks', 'Kyle', 'Ulf', 'Skeleton O Fun', 'Adagio', 'Marometro', 'Rafaes' },
    Default = 0,
    Multi = false,
    Text = 'NPCS',
})
Options.Quest:OnChanged(function(SelectedNPC)
local npcsr = game:GetService("Workspace").NPCs
   if SelectedNPC == "Abraska" then
local Abraskaprompt = npcsr.Abraska.HumanoidRootPart.DialogClick
fireproximityprompt(Abraskaprompt)
   elseif SelectedNPC == "Lumber Jack" then
local LumberJackprompt = npcsr['Lumber Jack'].HumanoidRootPart.DialogClick
fireproximityprompt(LumberJackprompt)
   elseif SelectedNPC == "Nebraska" then
local Nebraskaprompt = npcsr.Nebraska.HumanoidRootPart.DialogClick
fireproximityprompt(Nebraskaprompt)
   elseif SelectedNPC == "Vigilante" then
local Vigilanteprompt = npcsr.Vigilante.HumanoidRootPart.DialogClick
fireproximityprompt(Vigilanteprompt)
   elseif SelectedNPC == "Captorio" then
local Captorioprompt = npcsr.Captorio.HumanoidRootPart.DialogClick
fireproximityprompt(Captorioprompt)
   elseif SelectedNPC == "Humblert" then
local Humblertprompt = npcsr.Humblert.HumanoidRootPart.DialogClick
fireproximityprompt(Humblertprompt)
   elseif SelectedNPC == "Verdant" then
local verdant2prompt = npcsr.Verdant.HumanoidRootPart.DialogClick
fireproximityprompt(verdant2prompt)
   elseif SelectedNPC == "Trinks" then
local trinksprompt = npcsr.Trinks.HumanoidRootPart.DialogClick
fireproximityprompt(trinksprompt)
   elseif SelectedNPC == "Kyle" then
local kyleprompt = npcsr.Kyle.HumanoidRootPart.DialogClick
fireproximityprompt(kyleprompt)
   elseif SelectedNPC == "Ulf" then
local ulfprompt = npcsr.Ulf.HumanoidRootPart.DialogClick
fireproximityprompt(ulfprompt)
   elseif SelectedNPC == "Skeleton O Fun" then
local skeletonofunprompt = npcsr["Skeleton O'Fun"].HumanoidRootPart.DialogClick
fireproximityprompt(skeletonofunprompt)
   elseif SelectedNPC == "Adagio" then
local adagioprompt = npcsr.Adagio.HumanoidRootPart.DialogClick
fireproximityprompt(adagioprompt)
   elseif SelectedNPC == "Marometro" then
local marometroprompt = npcsr.Marometro.HumanoidRootPart.DialogClick
fireproximityprompt(marometroprompt)
   elseif SelectedNPC == "Rafaes" then
local rafaesprompt = npcsr.Rafaes.HumanoidRootPart.DialogClick
fireproximityprompt(rafaesprompt)
end end)
TabS2:AddDivider()
TabS2:AddLabel('Special Quest')

local scampiquest = TabS2:AddButton('Scampi', function()
local scampiprompt = npcsr.Scampi.HumanoidRootPart.DialogClick
fireproximityprompt(scampiprompt)
end)
scampiquest:AddTooltip('Endless Quest, You can talk to him again to get another quest')

local Cuppaquest = TabS2:AddButton('Cuppa', function()
local Cuppaprompt = npcsr.Cuppa.HumanoidRootPart.DialogClick
fireproximityprompt(Cuppaprompt)
end)
Cuppaquest:AddTooltip('Gives you free teapot helmet accessory')

local Liarquest = TabS2:AddButton('Liar', function()
local Liarprompt = npcsr.Liar.HumanoidRootPart.DialogClick
fireproximityprompt(Liarprompt)
end)
Liarquest:AddTooltip('Liar armor requires 2500 gold')

local Traitorquest = TabS2:AddButton('Traitor', function()
local Traitorprompt = npcsr.Traitor.HumanoidRootPart.DialogClick
fireproximityprompt(Traitorprompt)
end)
Traitorquest:AddTooltip('Rafaes Quest')

--[[ Settings ]]--

Library:OnUnload(function()
    print('Unloaded!')
    Library.Unloaded = true
end)
local MenuGroup = Tabs['UI Settings']:AddLeftGroupbox('Menu')
MenuGroup:AddButton('Unload', function() Library:Unload() end)
MenuGroup:AddLabel('Menu bind'):AddKeyPicker('MenuKeybind', { Default = 'RightControl', NoUI = false, Text = 'Menu keybind' }) 
Library.ToggleKeybind = Options.MenuKeybind
ThemeManager:SetLibrary(Library)
SaveManager:SetLibrary(Library)
SaveManager:IgnoreThemeSettings() 
SaveManager:SetIgnoreIndexes({ 'MenuKeybind' }) 
ThemeManager:SetFolder('MyScriptHub')
SaveManager:SetFolder('MyScriptHub/specific-game')
SaveManager:BuildConfigSection(Tabs['UI Settings']) 
ThemeManager:ApplyToTab(Tabs['UI Settings'])
Library:SetWatermarkVisibility(true)
while wait(.1) do
Library:SetWatermark("Meteor Spawns In "..tostring((game:GetService("ReplicatedStorage").GameInfo.Meteor.Value * 2)).." Seconds.")
end
